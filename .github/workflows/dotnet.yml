name: .NET

on:
  push:
    branches: [ dev ]

jobs:
  
  # build-linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: 6.0.x
  #   - name: Build
  #     run: |
  #       cd HoneyBee.Git.Gui/
  #       dotnet restore
  #       dotnet build --no-restore -c Release
  #       cd ../
  #       ls HoneyBee.Git.Gui/bin/Release/net8.0
  #   - name: Expose as artifact
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: HoneyBee-Git-Linux
  #       path: HoneyBee.Git.Gui/bin/Release/net8.0
        
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
    - name: Build
      run: |
        cd HoneyBee.Git.Gui/
        git apply patch_windows_release.patch
        git rev-parse HEAD > git_head_sha
        dotnet restore
        dotnet build --no-restore -c Release
        cd ../
        dir HoneyBee.Git.Gui/bin/Release/net8.0
        HoneyBee.Git.Gui/bin/Release/net8.0/GitBee.exe --version
    

    - name: Expose as artifact
      uses: actions/upload-artifact@v2
      with:
        name: GitBee-Windows
        path: HoneyBee.Git.Gui/bin/Release/net8.0
  
  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: 6.0.x
  #   - name: Build
  #     run: |
  #       cd HoneyBee.Git.Gui/
  #       dotnet restore
  #       dotnet build --no-restore -c Release
  #       cd ../
  #       ls HoneyBee.Git.Gui/bin/Release/net8.0
  #   - name: Expose as artifact
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: HoneyBee-Git-Macos
  #       path: HoneyBee.Git.Gui/bin/Release/net8.0
        
  push-itch:
    runs-on: ubuntu-latest
    needs: [build-windows]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
    - uses: actions/github-script@v7 
      with: 
        script: |
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          for (const release of releases.data) {
            if (release.tag_name === 'develop') {
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
              });
            }
          }
          await github.rest.git.deleteRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `tags/develop`,
          });
    - uses: actions/checkout@v2
    # - name: Download an artifact - linux
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: HoneyBee-Git-Linux
    #     path: linux/
    - name: Download an artifact - windows
      uses: actions/download-artifact@v2
      with:
        name: GitBee-Windows
        path: windows/
    # - name: Download an artifact - macos
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: HoneyBee-Git-Macos
    #     path: macos/

    - name: Check files
      run: |
        mv windows/runtimes/win-x64 ./ && rm -rf windows/runtimes/ && mkdir -p windows/runtimes && mv win-x64/ windows/runtimes/
        tar -zcf gitbee_windows.tar.gz -C windows/ .
        #git rev-parse HEAD >> checksums.txt
        #git log --pretty=format:"%s" --graph -1 >> checksums.txt
        #echo "\n" >> checksums.txt
        sudo apt update && sudo apt install -y nsis
        #export GITBEE_VERSION=$(cat windows/lua/version.lua | awk -F= '{ print $2 }' | sed -e 's/\"//g' | sed 's/[[:space:]]//g')
        export GITBEE_VERSION=$(dotnet windows/GitBee.dll --version)
        makensis -DSOURCE_DIR=./windows/ -DBUILD_VERSION=${GITBEE_VERSION} installer.nsi
        md5sum gitbee_windows.tar.gz >> checksums.txt
        md5sum *.exe >> checksums.txt
        mkdir gitbee_oss
        mv gitbee_windows.tar.gz gitbee_oss/
        mv *.exe gitbee_oss/
        mv checksums.txt gitbee_oss/
        ls -alh

    - uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        name: develop
        tag_name: develop
        fail_on_unmatched_files: true
        files: gitbee_oss/*.*

    - name: Upload to oss
      uses: tvrcgo/upload-to-oss@v0.1.1
      with:
        key-id: ${{ secrets.OSS_KEY_ID }}
        key-secret: ${{ secrets.OSS_KEY_SECRET }}
        region: oss-cn-chengdu
        bucket: gunfire-res
        asset-path: ./gitbee_oss/
        target-path: /gitbee/
    
    # - name: itch-butler-linux
    #   uses: josephbmanley/butler-publish-itchio-action@master
    #   env:
    #     BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
    #     CHANNEL: linux
    #     ITCH_GAME: HoneyBee-Git
    #     ITCH_USER: wanderer-x
    #     PACKAGE: linux/
        
    - name: itch-butler-windows
      uses: josephbmanley/butler-publish-itchio-action@master
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: windows
        ITCH_GAME: GitBee
        ITCH_USER: wanderer-x
        PACKAGE: windows/
    
    # - name: itch-butler-osx
    #   uses: josephbmanley/butler-publish-itchio-action@master
    #   env:
    #     BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
    #     CHANNEL: osx
    #     ITCH_GAME: HoneyBee-Git
    #     ITCH_USER: wanderer-x
    #     PACKAGE: macos/
